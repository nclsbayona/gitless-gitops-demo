kind: ConfigMap
apiVersion: v1
metadata:
  name: agent
  {{- include "agent.metadata" . | nindent 2 }}
data:
  rules: {{ quote .Values.rules }}
  cosign_pub: {{ .Values.cosign_pub }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  {{- include "agent.metadata" . | nindent 2 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: agent
      environment: {{ .Values.environment }}
  template:
    metadata:
      labels:
        component: agent
        environment: {{ .Values.environment }}
    spec:
      hostUsers: false
      serviceAccountName: {{ .Values.environment }}-{{ .Chart.Name }}-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - name: kubernetes-client-config
        projected:
          sources:
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - serviceAccountToken:
              path: token
      - name: downloaded-files
        emptyDir: {}
      - name: gitops-agent-config
        configMap:
          name: agent
          items:
          - key: rules
            path: rules.yaml
          - key: cosign_pub
            path: cosign.pub
      
      containers:
      - name: agent

        resources:
          requests:
            cpu: 10m
            memory: 15Mi
          limits:
            cpu: 20m
            memory: 25Mi
            
        volumeMounts:
        - name: kubernetes-client-config
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        - name: downloaded-files
          mountPath: /tmp/
        - name: gitops-agent-config
          mountPath: /etc/agent
          readOnly: true
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        startupProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 15
        readinessProbe:
          httpGet:
            path: /status
            port: http
          initialDelaySeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: agent
  {{- include "agent.metadata" . | nindent 2 }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
  selector:
    component: agent
    environment: {{ .Values.environment }}